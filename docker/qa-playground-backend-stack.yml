x-backend-image: &backend-image oshpalov/qa-playground-backend:${DOCKER_TAG:-latest}

x-postgres-env: &postgres-env
  POSTGRES_DB: postgres
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres

x-common-env: &common-env
  SECRET_KEY: ${SECRET_KEY?}
  TZ: ${TZ:-Asia/Tashkent}
  POSTGRES_HOST: postgres
  POSTGRES_PORT: 5432
  <<: *postgres-env
  REDIS_HOST: redis
  REDIS_PORT: 6379
  ALLOWED_HOSTS: ${ALLOWED_HOSTS:-*}
  CSRF_TRUSTED_ORIGINS: ${CSRF_TRUSTED_ORIGINS:-}
  AWS_S3_ENDPOINT_URL: ${AWS_S3_ENDPOINT_URL:-}
  AWS_S3_ACCESS_KEY_ID: ${AWS_S3_ACCESS_KEY_ID:-}
  AWS_S3_SECRET_ACCESS_KEY: ${AWS_S3_SECRET_ACCESS_KEY:-}
  AWS_STORAGE_BUCKET_NAME: ${AWS_STORAGE_BUCKET_NAME:-}
  AWS_S3_ADDRESSING_STYLE: ${AWS_S3_ADDRESSING_STYLE:-}
  AWS_S3_REGION_NAME: ${AWS_S3_REGION_NAME:-us-east-1}
  AWS_DEFAULT_ACL: ${AWS_DEFAULT_ACL:-private}
  ADMIN_USERNAME: ${ADMIN_USERNAME:-}
  ADMIN_PASSWORD: ${ADMIN_PASSWORD:-}
  SMTP_SERVER: ${SMTP_SERVER:-}
  SMTP_PORT: ${SMTP_PORT:-}
  SMTP_USERNAME: ${SMTP_USERNAME:-}
  SMTP_PASSWORD: ${SMTP_PASSWORD:-}
  DEFAULT_FROM_EMAIL: ${DEFAULT_FROM_EMAIL:-}

services:
  postgres:
    image: postgres:16-alpine
    environment:
      <<: *postgres-env
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      update_config:
        order: stop-first
        parallelism: 1
        delay: 10s
        failure_action: rollback
        monitor: 30s
      rollback_config:
        order: stop-first
        parallelism: 1
        delay: 10s
        failure_action: continue
        monitor: 30s
      resources:
        limits:
          cpus: "4"
          memory: 2G
        reservations:
          cpus: "1"
          memory: 512M
    healthcheck:
      test: pg_isready -U postgres
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s
  redis:
    image: redis:7-alpine
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      update_config:
        order: stop-first
        parallelism: 1
        delay: 10s
        failure_action: rollback
        monitor: 30s
      rollback_config:
        order: stop-first
        parallelism: 1
        delay: 10s
        failure_action: continue
        monitor: 30s
      resources:
        limits:
          cpus: "4"
          memory: 2G
        reservations:
          cpus: "1"
          memory: 512M
    healthcheck:
      test: redis-cli ping
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s
  qa-playground-backend-web:
    image: *backend-image
    hostname: ${HOSTNAME:-qa-playground-backend-web}
    environment:
      <<: *common-env
    command: ${DOCKER_CMD:-gunicorn}
    networks:
      - default
      - frontend
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      update_config:
        order: start-first
        parallelism: 2
        delay: 10s
        failure_action: rollback
        monitor: 30s
      rollback_config:
        order: start-first
        parallelism: 2
        delay: 10s
        failure_action: continue
        monitor: 30s
      resources:
        limits:
          cpus: "4"
          memory: 2G
        reservations:
          cpus: "1"
          memory: 512M
    healthcheck:
      test: curl -s -f http://localhost:8000/health
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s
  qa-playground-celery:
    image: *backend-image
    environment:
      <<: *common-env
    entrypoint: celery
    command: -A config worker -l info -P prefork -c 2 -E -B
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      update_config:
        order: start-first
        parallelism: 2
        delay: 10s
        failure_action: rollback
        monitor: 30s
      rollback_config:
        order: start-first
        parallelism: 2
        delay: 10s
        failure_action: continue
        monitor: 30s
      resources:
        limits:
          cpus: "4"
          memory: 2G
        reservations:
          cpus: "1"
          memory: 512M
    healthcheck:
      test: celery -A config inspect ping
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s

networks:
  frontend:
    external: true
